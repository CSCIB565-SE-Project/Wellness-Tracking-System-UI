{"ast":null,"code":"var _jsxFileName = \"/Users/stevenbutz/Desktop/Wellness-Tracking-System-UI/src/LoginPage/PasswordResetForm.js\",\n  _s = $RefreshSig$();\n// PasswordResetForm.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginForm.css'; // Reusing the same CSS for consistency\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordResetForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState(''); // State to hold submission message\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setMessage(''); // Reset message on new submission\n\n    try {\n      const response = await fetch('http://localhost:9191/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Handle successful reset request\n        console.log('Password reset email sent:', data);\n        setMessage('A password reset link has been sent to your email.');\n        setTimeout(() => navigate('/'), 5000); // Redirect to login after 5 seconds\n      } else {\n        // Handle errors or unsuccessful reset attempts\n        setMessage(data.message || 'Failed to send password reset email.');\n      }\n    } catch (error) {\n      console.error('Password reset error:', error);\n      setMessage('An error occurred. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Password Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            placeholder: \"Enter your email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"forgot-link\",\n          onClick: () => navigate('/'),\n          children: \"Return to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordResetForm, \"MwF1x+sWsmKIcU7zYHAaLGCexZU=\", false, function () {\n  return [useNavigate];\n});\n_c = PasswordResetForm;\nexport default PasswordResetForm;\nvar _c;\n$RefreshReg$(_c, \"PasswordResetForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","PasswordResetForm","_s","email","setEmail","message","setMessage","navigate","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","setTimeout","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/stevenbutz/Desktop/Wellness-Tracking-System-UI/src/LoginPage/PasswordResetForm.js"],"sourcesContent":["// PasswordResetForm.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginForm.css'; // Reusing the same CSS for consistency\n\nconst PasswordResetForm = () => {\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState(''); // State to hold submission message\n  const navigate = useNavigate();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setMessage(''); // Reset message on new submission\n\n    try {\n      const response = await fetch('http://localhost:9191/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        // Handle successful reset request\n        console.log('Password reset email sent:', data);\n        setMessage('A password reset link has been sent to your email.');\n        setTimeout(() => navigate('/'), 5000); // Redirect to login after 5 seconds\n      } else {\n        // Handle errors or unsuccessful reset attempts\n        setMessage(data.message || 'Failed to send password reset email.');\n      }\n    } catch (error) {\n      console.error('Password reset error:', error);\n      setMessage('An error occurred. Please try again later.');\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"form-box\">\n        <h1>Password Reset</h1>\n        {message && <div className=\"error-message\">{message}</div>}\n        <form onSubmit={handleSubmit} className=\"login-form\">\n          <div className=\"form-group\">\n            <input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Enter your email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"login-button\">Reset Password</button>\n          <button type=\"button\" className=\"forgot-link\" onClick={() => navigate('/')}>Return to Login</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default PasswordResetForm;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBJ,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEhB,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,MAAMe,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACf;QACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEJ,IAAI,CAAC;QAC/CZ,UAAU,CAAC,oDAAoD,CAAC;QAChEiB,UAAU,CAAC,MAAMhB,QAAQ,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACzC,CAAC,MAAM;QACL;QACAD,UAAU,CAACY,IAAI,CAACb,OAAO,IAAI,sCAAsC,CAAC;MACpE;IACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7ClB,UAAU,CAAC,4CAA4C,CAAC;IAC1D;EACF,CAAC;EAED,oBACEN,OAAA;IAAKyB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9B1B,OAAA;MAAKyB,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvB1B,OAAA;QAAA0B,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACtBzB,OAAO,iBAAIL,OAAA;QAAKyB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAErB;MAAO;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1D9B,OAAA;QAAM+B,QAAQ,EAAEvB,YAAa;QAACiB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAClD1B,OAAA;UAAKyB,SAAS,EAAC,YAAY;UAAAC,QAAA,eACzB1B,OAAA;YACEgC,IAAI,EAAC,OAAO;YACZC,EAAE,EAAC,OAAO;YACVC,WAAW,EAAC,kBAAkB;YAC9BC,KAAK,EAAEhC,KAAM;YACbiC,QAAQ,EAAGC,CAAC,IAAKjC,QAAQ,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN9B,OAAA;UAAQgC,IAAI,EAAC,QAAQ;UAACP,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtE9B,OAAA;UAAQgC,IAAI,EAAC,QAAQ;UAACP,SAAS,EAAC,aAAa;UAACc,OAAO,EAAEA,CAAA,KAAMhC,QAAQ,CAAC,GAAG,CAAE;UAAAmB,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAxDID,iBAAiB;EAAA,QAGJH,WAAW;AAAA;AAAA0C,EAAA,GAHxBvC,iBAAiB;AA0DvB,eAAeA,iBAAiB;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}