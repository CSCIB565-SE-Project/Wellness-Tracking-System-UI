{"ast":null,"code":"var _jsxFileName = \"/Users/stevenbutz/Desktop/Wellness-Tracking-System-UI/src/LoginPage/PasswordResetForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginForm.css'; // Assuming this CSS file exists for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordResetForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch('http://localhost:9191/password-reset', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email\n      })\n    }).then(response => {\n      var _response$headers$get;\n      console.log(\"Response received:\", response);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      if ((_response$headers$get = response.headers.get(\"content-type\")) !== null && _response$headers$get !== void 0 && _response$headers$get.includes(\"application/json\")) {\n        return response.json();\n      }\n      throw new Error('Response not JSON');\n    }).then(data => {\n      console.log(\"Data parsed from response:\", data);\n      setMessage('A password reset link has been sent to your email.');\n      setTimeout(() => navigate('/'), 5000); // Redirect to login after 5 seconds\n    }).catch(error => {\n      console.error('Fetch error:', error);\n      setMessage('An error occurred. Please try again later.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Password Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            placeholder: \"Enter your email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"forgot-link\",\n          onClick: () => navigate('/'),\n          children: \"Return to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordResetForm, \"MwF1x+sWsmKIcU7zYHAaLGCexZU=\", false, function () {\n  return [useNavigate];\n});\n_c = PasswordResetForm;\nexport default PasswordResetForm;\nvar _c;\n$RefreshReg$(_c, \"PasswordResetForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","PasswordResetForm","_s","email","setEmail","message","setMessage","navigate","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","_response$headers$get","console","log","ok","Error","get","includes","json","data","setTimeout","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/stevenbutz/Desktop/Wellness-Tracking-System-UI/src/LoginPage/PasswordResetForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginForm.css'; // Assuming this CSS file exists for styling\n\nconst PasswordResetForm = () => {\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  \n    fetch('http://localhost:9191/password-reset', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email }),\n    })\n    .then(response => {\n      console.log(\"Response received:\", response);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      if (response.headers.get(\"content-type\")?.includes(\"application/json\")) {\n        return response.json();\n      }\n      throw new Error('Response not JSON');\n    })\n    .then(data => {\n      console.log(\"Data parsed from response:\", data);\n      setMessage('A password reset link has been sent to your email.');\n      setTimeout(() => navigate('/'), 5000); // Redirect to login after 5 seconds\n    })\n    .catch(error => {\n      console.error('Fetch error:', error);\n      setMessage('An error occurred. Please try again later.');\n    });\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"form-box\">\n        <h1>Password Reset</h1>\n        {message && <div className=\"error-message\">{message}</div>}\n        <form onSubmit={handleSubmit} className=\"login-form\">\n          <div className=\"form-group\">\n            <input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Enter your email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"login-button\">Reset Password</button>\n          <button type=\"button\" className=\"forgot-link\" onClick={() => navigate('/')}>Return to Login</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default PasswordResetForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}