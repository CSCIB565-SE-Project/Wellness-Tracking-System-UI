{"ast":null,"code":"var _jsxFileName = \"/Users/stevenbutz/Desktop/Wellness-Tracking-System-UI/src/LoginPage/NewPasswordResetForm.js\",\n  _s = $RefreshSig$();\n// NewPasswordResetForm.js\n\nimport React, { useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPasswordResetForm = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get('token'); // Assuming the URL includes something like ?token=abc\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match.\");\n      return;\n    }\n    // Implement the API call to your backend\n    try {\n      console.log(\"Sending password:\", password);\n      const response = await fetch('http://localhost:9191/password-reset/confirm', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage('Your password has been reset successfully.');\n        setTimeout(() => navigate('/'), 5000); // Redirect to login after 5 seconds\n      } else {\n        setMessage(data.message || 'Failed to reset password.');\n      }\n    } catch (error) {\n      console.error('Reset password error:', error);\n      setMessage('An error occurred. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"New Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Confirm New Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPasswordResetForm, \"VnP0Lt4jvmMPOe6G30TAAEegAX0=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = NewPasswordResetForm;\nexport default NewPasswordResetForm;\nvar _c;\n$RefreshReg$(_c, \"NewPasswordResetForm\");","map":{"version":3,"names":["React","useState","useNavigate","useSearchParams","jsxDEV","_jsxDEV","NewPasswordResetForm","_s","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","navigate","searchParams","token","get","handleSubmit","event","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","ok","setTimeout","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/Users/stevenbutz/Desktop/Wellness-Tracking-System-UI/src/LoginPage/NewPasswordResetForm.js"],"sourcesContent":["// NewPasswordResetForm.js\n\nimport React, { useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nconst NewPasswordResetForm = () => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get('token'); // Assuming the URL includes something like ?token=abc\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match.\");\n      return;\n    }\n    // Implement the API call to your backend\n    try {\n      console.log(\"Sending password:\", password);\n      const response = await fetch('http://localhost:9191/password-reset/confirm', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ token, password }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setMessage('Your password has been reset successfully.');\n        setTimeout(() => navigate('/'), 5000); // Redirect to login after 5 seconds\n      } else {\n        setMessage(data.message || 'Failed to reset password.');\n      }\n    } catch (error) {\n      console.error('Reset password error:', error);\n      setMessage('An error occurred. Please try again later.');\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"form-box\">\n        <h1>Reset Your Password</h1>\n        {message && <div className=\"error-message\">{message}</div>}\n        <form onSubmit={handleSubmit} className=\"login-form\">\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              placeholder=\"New Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              placeholder=\"Confirm New Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"login-button\">Change Password</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default NewPasswordResetForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}